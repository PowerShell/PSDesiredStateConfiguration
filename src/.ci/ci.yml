name: Build-$(System.PullRequest.PullRequestNumber)-$(Date:yyyyMMdd)$(Rev:.rr)
trigger:
  # Batch merge builds together while a merge build is running
  batch: true
  branches:
    include:
    - master
pr:
  branches:
    include:
    - master

stages:
- stage: Build
  displayName: Build PowerShell Package
  jobs:
  - job: BuildPkg
    displayName: Build Package
    pool:
      vmImage: windows-2019
    steps:
    - pwsh: |
        Install-Module -Name "platyPS","Pester" -Force
      displayName: Install dependencies
    - pwsh: |
        Install-Module -Name "PSScriptAnalyzer" -RequiredVersion 1.18.0 -Force
      displayName: Install PSScriptAnalyzer
    - pwsh: |
        Install-Module -Name PSPackageProject -Force
      displayName: Install PSPackageProject module
    - pwsh: |
        $(Build.SourcesDirectory)/build.ps1 -Build
      displayName: Build and publish artifact

- stage: Test
  displayName: Test Package
  jobs:
  - template: test.yml
    parameters:
      jobName: TestPkgWin
      displayName: PowerShell Core on Windows
      imageName: windows-2019

  - template: test.yml
    parameters:
      jobName: TestPkgWinPS
      displayName: Windows PowerShell on Windows
      imageName: windows-2019
      powershellExecutable: powershell

  - template: test.yml
    parameters:
      jobName: TestPkgUbuntu16
      displayName: PowerShell Core on Ubuntu 16.04
      imageName: ubuntu-16.04

  - template: test.yml
    parameters:
      jobName: TestPkgWinMacOS
      displayName: PowerShell Core on macOS
      imageName: macOS-10.14

- stage: Release
  displayName: Release Package
  # add `succeeded(),` to the and statement
  condition: and( eq(variables['Build.Reason'], 'Manual'), eq(variables['Publish'], 'Yes'))
  jobs:
  - template: release.yml
  
